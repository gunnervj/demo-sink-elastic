version: '3.2'
services:
  elastic-search:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.8.1
    container_name: elastic-search
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    volumes:
      - ${ELASTIC_SEARCH_DATA_DIR}:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    networks:
      - elastic-kafka
  zookeeper:
    image:  zookeeper:3.4.9
    container_name: zookeeeper
    hostname: zookeeper
    environment:
      ZOO_MY_ID: 1
      ZOO_PORT: 2181
      ZOO_SERVERS: server.1=zookeeper:2888:3888
    volumes:
      - ${ZOOKEEPER_DATA_DIR}:/data
      - ${ZOOKEEPER_LOG_DIR}:/datalog
    networks:
      - elastic-kafka
    ports:
      - 2181:2181
  kafka:
    image: confluentinc/cp-kafka:5.5.1
    container_name: kafka
    hostname: kafka
    networks:
      - elastic-kafka
    volumes:
      - ${MOUNT_DIR}:/var/lib/kafka/connectors
      - ${KAFKA_DATA_DIR}:/var/lib/kafka/data
    ports:
      - 9092:9092
      - 9093:9093
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka:19092,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
      - elastic-search
  kibana:
    image: docker.elastic.co/kibana/kibana:7.8.1
    container_name: kibana
    ports:
      - 5601:5601
    environment:
      ELASTICSEARCH_URL: http://elastic-search:9200
      ELASTICSEARCH_HOSTS: http://elastic-search:9200
    networks:
      - elastic-kafka
    depends_on:
      - elastic-search

volumes:
  data01:
    driver: local
networks:
  elastic-kafka:
    driver: bridge